<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.xugu</groupId>
  <artifactId>insert</artifactId>
  <version>1.0.0</version>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.0.RELEASE</version>
  </parent>
  <name>insert</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <!--devtools热部署-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
      <scope>true</scope>
    </dependency>

  <!--tomcat 、dispatchservlet、 xml-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!--lombok偷懒工具-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>com.xugu</groupId>
      <artifactId>xugu-permission</artifactId>
      <version>1.1.0.202010101329</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib/xugu-permission-1.1.0.202010101329-with-dependencies.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>
  <!--所有的组件都是使用spring-boot-starter工具-->
  <build>
    <!--<resources>-->
      <!--<resource>-->
        <!--<directory>src/main/resources</directory>-->
        <!--<filtering>true</filtering>-->
        <!--<excludes>-->
          <!--<exclude>dev/*</exclude>-->
          <!--<exclude>test/*</exclude>-->
          <!--<exclude>prod/*</exclude>-->
        <!--</excludes>-->
      <!--</resource>-->
      <!--<resource>-->
        <!--<directory>src/main/resources/${package.environment}</directory>-->
      <!--</resource>-->
    <!--</resources>-->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>*</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources/${package.environment}</directory>
      </resource>
    </resources>
    <plugins>
      <!-- 分离lib -->
      <plugin>
        <!--把依赖的jar包复制出来放到编译后的target/lib目录，并且在打包时候排除内部依赖-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>



      <!-- 分离资源文件 -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                </resource>
              </resources>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--打包jar-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <!-- 指定资源文件目录，与打包的jar文件同级目录 -->
            <manifestEntries>
              <Class-Path>../lib ../lib/xugu-permission-1.1.0.202010101329-with-dependencies.jar</Class-Path>
            </manifestEntries>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>com.xugu.App</mainClass>
              <classpathPrefix>lib</classpathPrefix> //包的前缀
            </manifest>
          </archive>
          <!-- 打包时忽略的文件（也就是不打进jar包里的文件），本例将resources下的.yml、.properties文件全部排除 -->
          <excludes>
            <exclude>**/*.xml</exclude>
            <exclude>**/*.properties</exclude>
            <exclude>**/*.yaml</exclude>
            <exclude>**/*.yml</exclude>
          </excludes>
        </configuration>
      </plugin>
      <!-- spring boot repackage -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>2.0.1.RELEASE</version>
        <configuration>
          <layout>ZIP</layout>
          <includes>
            <include>
              <groupId>non-exists</groupId>
              <artifactId>non-exists</artifactId>
            </include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--打包为压缩文件-->
    </plugins>
  </build>

</project>
